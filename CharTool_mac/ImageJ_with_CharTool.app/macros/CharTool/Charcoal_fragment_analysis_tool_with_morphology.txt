// Charcoal Fragment Analysis Tool v.2
//
// This text file contains all of the tools necessary to quantify charcoal fragments
// using imageJ and a usb connected digital microscope
//  
// Grant Snitker
// Department of Crop and Soil Sciences
// School of Agricultural and Environmental Sciences
// University of Georgia
// grant.snitker@uga.edu
// 2021

var samplenum = "";
var depths =  "";
var date =  "";
var analyst = "";
var notes =  "";

    macro "Open Wand Tool  [c]" {
        setTool("wand"); 
        }

    macro "Open Freehand Trace Tool  [x]" {
        setTool("freehand"); 
        }

    macro "Charcoal Particle Measure Tool [z]" {
        run("Wand Tool...");
         }
     
    var pmCmds = newMenu("Popup Menu",
    newArray("Measure Fragment..."));

    macro "Popup Menu" {
           cmd = getArgument();
	  if(isOpen("Results")) {
      if (cmd=="Measure Fragment...") {
           run("Measure");
       // Create Rectangularity Metric
        p = getResult("Perim.");
        w = getResult("Width");
        h = getResult("Height");
        rect = p / ((w + h)*2);
        setResult("Rect", nResults-1, rect);
	    setResult("Sample", nResults-1, samplenum);
	    setResult("Depths", nResults-1, depths);
	    setResult("Date", nResults-1, date);
	    setResult("Analyst", nResults-1, analyst);
	    setResult("Other info", nResults-1, notes);
        updateResults(); }}
		else {
	   Dialog.create("CharTool - Enter Metadata");
       Dialog.addString("      Sample Number:", "Enter Sample Number", 23); 
       Dialog.addString("      Depth Range (cm):", "Enter Depth Range", 23); 
       Dialog.addString("      Date:", "Date of Analysis", 23); 
       Dialog.addString("      Analyst:", "Analyst Name or Initials", 23); 
       Dialog.addString("      Other Info:", "Other Pertinent Information", 23); 
       Dialog.show;
       samplenum =  Dialog.getString();
       depths =  Dialog.getString();
       date =  Dialog.getString();
       analyst =  Dialog.getString();
       notes =  Dialog.getString();
	   run("Measure");
       // Create Rectangularity Metric
        p = getResult("Perim.");
        w = getResult("Width");
        h = getResult("Height");
        rect = p / ((w + h)*2);
        setResult("Rect", nResults-1, rect);
	    setResult("Sample", nResults-1, samplenum);
	    setResult("Depths", nResults-1, depths);
	    setResult("Date", nResults-1, date);
	    setResult("Analyst", nResults-1, analyst);
	    setResult("Other info", nResults-1, notes);
        updateResults();
		}
	   Dialog.create("Morphology");
          items = newArray("Structure", "No Structure");
          Dialog.addRadioButtonGroup("Visible Structure", items, 1, 2, "No Structure");
          items = newArray("Irregular", "Geometric", "Elongated, Ramifications", "Elongated, No Ramifications","N/A");
          Dialog.addRadioButtonGroup("Morphotype", items, 5, 1, "N/A");
          Dialog.setLocation(600,200)
          Dialog.show;
             type1 = Dialog.getRadioButton();
             type2 = Dialog.getRadioButton();
      
             
             if ((type1 == "No Structure") & (type2 == "N/A")) {
             morph = "N/A";
         }
             if ((type1 == "No Structure") & (type2 == "Irregular")) {
             morph = "P";
         }
             if ((type1 == "No Structure") & (type2 == "Geometric")) {
             morph = "C";
         }
             if ((type1 == "No Structure") & (type2 == "Elongated, Ramifications")) {
             morph = "D";
         }
             if ((type1 == "No Structure") & (type2 == "Elongated, No Ramifications")) {
             morph = "F";
         }
             if ((type1 == "Structure") & (type2 == "Geometric")) {
             morph = "S/B";
         }
             if ((type1 == "Structure") & (type2 == "Irregular")) {
             morph = "M";
         }
		 if ((type1 == "Structure") & (type2 == "Elongated, Ramifications")) {
             morph = "D";
         }
             if ((type1 == "Structure") & (type2 == "Elongated, No Ramifications")) {
             morph = "F";
		 }
        setResult("Morph", nResults-1, morph);
        updateResults();
         }
		 
     
    macro "Remove Last Measurement  [d]" {
        IJ.deleteRows(nResults-1,nResults-1);
         }
    
    macro "Open Charcoal Morphotype Flowchart  [s]" {
        dir = getDirectory("macros");
        open(dir + "CharTool/Morphotype_flowchart.png");
        setLocation(600,0,600,600); 
         }
     
	macro "Enter Metadata  [a]" {
       Dialog.create("CharTool");
       Dialog.addString("      Sample Number:", "Enter Sample Number", 23); 
       Dialog.addString("      Depth Range (cm):", "Enter Depth Range", 23); 
       Dialog.addString("      Date:", "Date of Analysis", 23); 
       Dialog.addString("      Analyst:", "Analyst Name or Initials", 23); 
       Dialog.addString("      Other Info:", "Other Pertinent Information", 23); 
       Dialog.show;
       samplenum =  Dialog.getString();
       depths =  Dialog.getString();
       date =  Dialog.getString();
       analyst =  Dialog.getString();
       notes =  Dialog.getString();
       }
	 
    macro "No Charcoal Found  [n]" {
        run("Select All");
        run("Measure");
        setResult("Area", nResults, 0);
        IJ.deleteRows(nResults-2,nResults-2);
       }
    
    macro "Open Instructions  [h]" {
        Dialog.create("CharTool");
        Dialog.addMessage("Press [C] for magic wand tool");
        Dialog.addMessage("Press [X] for freehand trace tool");
        Dialog.addMessage("Press [Z] to set edge-finding thresholds");
        Dialog.addMessage(" ");
        Dialog.addMessage("Press [A] to enter sample metadata");
        Dialog.addMessage("Press [S] to open charcoal morphotype flowchart");
        Dialog.addMessage("Press [D] to delete last measurement");
        Dialog.addMessage(" ");
        Dialog.addMessage("Press [N] if no charcoal is found");
        Dialog.addMessage("Press [W] to reset scale");
        Dialog.addMessage("Press [H] to see these instructions again");
        Dialog.addMessage(" ");
        Dialog.addMessage("Right click (default) or press [M] to measure a charcoal fragment");
        Dialog.show;
        }


  macro "Open New Image  [q]" {
       waitForUser("CharTool", "Opening new image");
       open();
        }
    
    
     macro "Reset scale [w]" {
        setTool("line");
       waitForUser("Set Scale", "Use Draw Line tool to select a known length\nClick OK when finished");
       run("Set Scale...");
       Dialog.create("CharTool");
       Dialog.addMessage("Add visible scale bar to images?");
       items = newArray("Yes", "No");
       Dialog.addChoice("                  ", items, "Yes");
       Dialog.show;
       choice1c = Dialog.getChoice();
       if (choice1c == "Yes") {
       
        Dialog.create("CharTool");
       Dialog.addString("Length of scale bar", "length in units", 15); 
        Dialog.show;
       scalebar =  Dialog.getString();
       
       run("Scale Bar...", "width=scalebar height=6 font=16 color=Green background=None location=[Lower Left] overlay");
       }
       if (choice1c == "No") {};
        }

currentNResults = nResults;
if (nResults == currentNResults) {  // if Analyze Particles did not find any particles
    setResult("Label", nResults, getTitle());
}
